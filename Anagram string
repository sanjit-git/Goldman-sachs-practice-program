/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
    static boolean areAnagram(char[] str1, char[] str2) 
    {
        int n1=str1.length;
        int n2=str2.length;
        
        if(n1!=n2)
        {
            return false;
        }
        Arrays.sort(str1);
        Arrays.sort(str2);
        for (int i = 0; i < n1; i++) 
        if (str1[i] != str2[i]) 
                return false; 
  
        return true; 
        
    }
public static void main (String[] args) throws java.lang.Exception
	{
   char str1[] = { 't', 'e', 's', 't' }; 
        char str2[] = { 't', 't', 'e', 'w' }; 
         if (areAnagram(str1, str2)) 
            System.out.println("The two strings are"
                               + " anagram of each other"); 
        else
            System.out.println("The two strings are not"
                               + " anagram of each other"); 
} 
}



Check whether two strings are anagram of each other

Write a function to check whether two given strings are anagram of each other or not. An anagram of a string is another string that contains same characters, only the order of characters can be different. For example, “abcd” and “dabc” are anagram of each other.check-whether-two-strings-are-anagram-of-each-other
We strongly recommend that you click here and practice it, before moving on to the solution.

